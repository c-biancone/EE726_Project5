%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 24 0 336 360
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 5570 6000 1200 pap
%%Page: cds 1
gis
430 0 5566 5993 clwin
430 0 5563 5993 clwin
430 0 5563 5993 clwin
ssls
62 0 2563 2119 dls
2580 2119 dlt
-13 14 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
13 4 dlv
45 0 dlv
dle
2580 2168 dlt
-13 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
13 5 dlv
45 0 dlv
dle
0 80 2572 2252 dls
0 80 2598 2252 dls
2549 2376 dlt
-4 9 dlv
-13 13 dlv
93 0 dlv
dle
2532 2465 dlt
4 -14 dlv
13 -9 dlv
23 -4 dlv
13 0 dlv
22 4 dlv
13 9 dlv
5 14 dlv
0 8 dlv
-5 14 dlv
-13 8 dlv
-22 5 dlv
-13 0 dlv
-23 -5 dlv
-13 -8 dlv
-4 -14 dlv
0 -8 dlv
dle
93 -62 2532 2500 dls
93 0 2706 2119 dls
2737 2159 dlt
4 -4 dlv
5 4 dlv
-5 5 dlv
-4 -5 dlv
dle
2790 2159 dlt
4 -4 dlv
5 4 dlv
-5 5 dlv
-4 -5 dlv
dle
2724 2208 dlt
-5 9 dlv
-13 13 dlv
93 0 dlv
dle
2706 2323 dlt
0 -44 dlv
40 -5 dlv
-5 5 dlv
-4 13 dlv
0 13 dlv
4 13 dlv
9 9 dlv
13 5 dlv
9 0 dlv
14 -5 dlv
8 -9 dlv
5 -13 dlv
0 -13 dlv
-5 -13 dlv
-4 -5 dlv
-9 -4 dlv
dle
2706 2385 dlt
4 -13 dlv
14 -9 dlv
22 -5 dlv
13 0 dlv
22 5 dlv
13 9 dlv
5 13 dlv
0 9 dlv
-5 13 dlv
-13 9 dlv
-22 4 dlv
-13 0 dlv
-22 -4 dlv
-14 -9 dlv
-4 -13 dlv
0 -9 dlv
dle
93 -62 2706 2420 dls
62 0 2737 2451 dls
2755 2451 dlt
-14 14 dlv
-4 8 dlv
0 14 dlv
4 8 dlv
14 5 dlv
44 0 dlv
dle
3085 2115 dlt
62 18 dlv
-62 17 dlv
62 18 dlv
-62 18 dlv
dle
3085 2221 dlt
5 -4 dlv
4 4 dlv
-4 5 dlv
-5 -5 dlv
dle
3138 2221 dlt
5 -4 dlv
4 4 dlv
-4 5 dlv
-5 -5 dlv
dle
3054 2265 dlt
0 49 dlv
36 -26 dlv
0 13 dlv
4 9 dlv
5 4 dlv
13 4 dlv
9 0 dlv
13 -4 dlv
9 -9 dlv
4 -13 dlv
0 -13 dlv
-4 -14 dlv
-5 -4 dlv
-8 -4 dlv
dle
3076 2349 dlt
-4 0 dlv
-9 5 dlv
-4 4 dlv
-5 9 dlv
0 18 dlv
5 9 dlv
4 4 dlv
9 5 dlv
9 0 dlv
9 -5 dlv
13 -9 dlv
44 -44 dlv
0 62 dlv
dle
3054 2460 dlt
5 -13 dlv
13 -9 dlv
22 -4 dlv
13 0 dlv
23 4 dlv
13 9 dlv
4 13 dlv
0 9 dlv
-4 13 dlv
-13 9 dlv
-23 4 dlv
-13 0 dlv
-22 -4 dlv
-13 -9 dlv
-5 -13 dlv
0 -9 dlv
dle
93 -61 3054 2495 dls
62 0 3085 2526 dls
3103 2526 dlt
-13 14 dlv
-5 9 dlv
0 13 dlv
5 9 dlv
13 4 dlv
44 0 dlv
dle
3198 2124 dlt
27 -5 dlv
-27 0 dlv
-4 5 dlv
4 4 dlv
27 -9 dlv
dle
3198 2164 dlt
27 -5 dlv
-27 0 dlv
-4 5 dlv
4 4 dlv
27 -9 dlv
dle
3225 2248 dlt
70 0 dlv
14 -5 dlv
4 -4 dlv
5 -9 dlv
0 -13 dlv
-5 -9 dlv
dle
3238 2248 dlt
-9 -9 dlv
-4 -9 dlv
0 -13 dlv
4 -9 dlv
9 -9 dlv
13 -4 dlv
9 0 dlv
13 4 dlv
9 9 dlv
5 9 dlv
0 13 dlv
-5 9 dlv
-9 9 dlv
dle
3256 2345 dlt
0 -66 dlv
-62 44 dlv
93 0 dlv
dle
3194 2420 dlt
0 -44 dlv
40 -4 dlv
-5 4 dlv
-4 13 dlv
0 14 dlv
4 13 dlv
9 9 dlv
13 4 dlv
9 0 dlv
13 -4 dlv
9 -9 dlv
5 -13 dlv
0 -14 dlv
-5 -13 dlv
-4 -4 dlv
-9 -5 dlv
dle
62 0 3225 2460 dls
3242 2460 dlt
-13 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
13 5 dlv
45 0 dlv
dle
3216 2544 dlt
-5 0 dlv
-8 5 dlv
-5 4 dlv
-4 9 dlv
0 18 dlv
4 8 dlv
5 5 dlv
8 4 dlv
9 0 dlv
9 -4 dlv
13 -9 dlv
45 -44 dlv
0 62 dlv
dle
3238 2677 dlt
-9 -5 dlv
-4 -13 dlv
0 -13 dlv
4 -13 dlv
9 -5 dlv
9 5 dlv
4 8 dlv
5 23 dlv
4 8 dlv
9 5 dlv
4 0 dlv
9 -5 dlv
5 -13 dlv
0 -13 dlv
-5 -13 dlv
-9 -5 dlv
dle
3225 2699 dlt
62 27 dlv
-62 26 dlv
dle
3194 2783 dlt
75 0 dlv
13 4 dlv
5 9 dlv
0 9 dlv
dle
0 31 3225 2770 dls
3198 2836 dlt
27 -4 dlv
-27 0 dlv
-4 4 dlv
4 5 dlv
27 -9 dlv
dle
3198 2876 dlt
27 -4 dlv
-27 0 dlv
-4 4 dlv
4 4 dlv
27 -8 dlv
dle
62 0 3399 3560 dls
3417 3560 dlt
-14 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
14 4 dlv
44 0 dlv
dle
3417 3608 dlt
-14 14 dlv
-4 8 dlv
0 14 dlv
4 8 dlv
14 5 dlv
44 0 dlv
dle
0 80 3408 3692 dls
0 80 3434 3692 dls
3386 3816 dlt
-5 9 dlv
-13 13 dlv
93 0 dlv
dle
3368 3905 dlt
4 -14 dlv
14 -8 dlv
22 -5 dlv
13 0 dlv
22 5 dlv
13 8 dlv
5 14 dlv
0 9 dlv
-5 13 dlv
-13 9 dlv
-22 4 dlv
-13 0 dlv
-22 -4 dlv
-14 -9 dlv
-4 -13 dlv
0 -9 dlv
dle
93 -62 3368 3940 dls
93 0 3194 3548 dls
3225 3588 dlt
4 -5 dlv
5 5 dlv
-5 4 dlv
-4 -4 dlv
dle
3278 3588 dlt
4 -5 dlv
5 5 dlv
-5 4 dlv
-4 -4 dlv
dle
3211 3636 dlt
-4 9 dlv
-13 14 dlv
93 0 dlv
dle
3194 3751 dlt
0 -44 dlv
40 -4 dlv
-5 4 dlv
-4 14 dlv
0 13 dlv
4 13 dlv
9 9 dlv
13 4 dlv
9 0 dlv
13 -4 dlv
9 -9 dlv
5 -13 dlv
0 -13 dlv
-5 -14 dlv
-4 -4 dlv
-9 -5 dlv
dle
3194 3813 dlt
4 -13 dlv
13 -9 dlv
23 -4 dlv
13 0 dlv
22 4 dlv
13 9 dlv
5 13 dlv
0 9 dlv
-5 14 dlv
-13 8 dlv
-22 5 dlv
-13 0 dlv
-23 -5 dlv
-13 -8 dlv
-4 -14 dlv
0 -9 dlv
dle
93 -62 3194 3849 dls
62 0 3225 3880 dls
3242 3880 dlt
-13 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
13 4 dlv
45 0 dlv
dle
2876 3404 dlt
62 18 dlv
-62 18 dlv
62 17 dlv
-62 18 dlv
dle
0 80 2885 3506 dls
0 80 2912 3506 dls
2845 3617 dlt
0 61 dlv
93 -44 dlv
dle
2867 3709 dlt
-4 0 dlv
-9 5 dlv
-4 4 dlv
-5 9 dlv
0 18 dlv
5 9 dlv
4 4 dlv
9 5 dlv
9 0 dlv
9 -5 dlv
13 -9 dlv
44 -44 dlv
0 62 dlv
dle
2845 3820 dlt
5 -13 dlv
13 -9 dlv
22 -4 dlv
13 0 dlv
22 4 dlv
14 9 dlv
4 13 dlv
0 9 dlv
-4 13 dlv
-14 9 dlv
-22 4 dlv
-13 0 dlv
-22 -4 dlv
-13 -9 dlv
-5 -13 dlv
0 -9 dlv
dle
93 -61 2845 3855 dls
62 0 2876 3886 dls
2894 3886 dlt
-13 14 dlv
-5 9 dlv
0 13 dlv
5 9 dlv
13 4 dlv
44 0 dlv
dle
2675 3181 dlt
27 -5 dlv
-27 0 dlv
-4 5 dlv
4 4 dlv
27 -9 dlv
dle
2675 3221 dlt
27 -5 dlv
-27 0 dlv
-4 5 dlv
4 4 dlv
27 -9 dlv
dle
2702 3305 dlt
71 0 dlv
13 -5 dlv
5 -4 dlv
4 -9 dlv
0 -13 dlv
-4 -9 dlv
dle
2715 3305 dlt
-9 -9 dlv
-4 -9 dlv
0 -13 dlv
4 -9 dlv
9 -9 dlv
14 -4 dlv
8 0 dlv
14 4 dlv
9 9 dlv
4 9 dlv
0 13 dlv
-4 9 dlv
-9 9 dlv
dle
2733 3402 dlt
0 -66 dlv
-62 44 dlv
93 0 dlv
dle
2671 3477 dlt
0 -44 dlv
40 -5 dlv
-5 5 dlv
-4 13 dlv
0 13 dlv
4 14 dlv
9 9 dlv
14 4 dlv
8 0 dlv
14 -4 dlv
9 -9 dlv
4 -14 dlv
0 -13 dlv
-4 -13 dlv
-5 -5 dlv
-9 -4 dlv
dle
93 0 2702 3517 dls
2715 3517 dlt
-9 9 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
9 9 dlv
14 4 dlv
8 0 dlv
14 -4 dlv
9 -9 dlv
4 -9 dlv
0 -13 dlv
-4 -9 dlv
-9 -9 dlv
dle
2693 3601 dlt
-4 0 dlv
-9 4 dlv
-5 5 dlv
-4 9 dlv
0 17 dlv
4 9 dlv
5 5 dlv
9 4 dlv
9 0 dlv
8 -4 dlv
14 -9 dlv
44 -44 dlv
0 62 dlv
dle
2715 3734 dlt
-9 -5 dlv
-4 -13 dlv
0 -13 dlv
4 -13 dlv
9 -5 dlv
9 5 dlv
5 8 dlv
4 23 dlv
4 8 dlv
9 5 dlv
5 0 dlv
9 -5 dlv
4 -13 dlv
0 -13 dlv
-4 -13 dlv
-9 -5 dlv
dle
2702 3756 dlt
62 26 dlv
-62 27 dlv
dle
2671 3840 dlt
75 0 dlv
14 4 dlv
4 9 dlv
0 9 dlv
dle
0 31 2702 3827 dls
2675 3893 dlt
27 -4 dlv
-27 0 dlv
-4 4 dlv
4 4 dlv
27 -8 dlv
dle
2675 3933 dlt
27 -5 dlv
-27 0 dlv
-4 5 dlv
4 4 dlv
27 -9 dlv
dle
3496 2177 dlt
-93 0 dlv
93 36 dlv
-93 35 dlv
93 0 dlv
dle
3403 2306 dlt
4 -13 dlv
13 -9 dlv
23 -5 dlv
13 0 dlv
22 5 dlv
13 9 dlv
5 13 dlv
0 9 dlv
-5 13 dlv
-13 9 dlv
-22 4 dlv
-13 0 dlv
-23 -4 dlv
-13 -9 dlv
-4 -13 dlv
0 -9 dlv
dle
93 -62 3403 2341 dls
2590 3711 dlt
-93 0 dlv
93 35 dlv
-93 35 dlv
93 0 dlv
dle
2519 3817 dlt
-4 0 dlv
-9 4 dlv
-5 5 dlv
-4 8 dlv
0 18 dlv
4 9 dlv
5 4 dlv
9 5 dlv
8 0 dlv
9 -5 dlv
14 -8 dlv
44 -45 dlv
0 62 dlv
dle
1254 301 dpb
1150 406 dpv
1010 406 dpv
906 301 dpv
1010 197 dpv
1150 197 dpv
dpu
1254 998 dpb
1150 1103 dpv
1010 1103 dpv
906 998 dpv
1010 894 dpv
1150 894 dpv
dpu
1254 3089 dpb
1150 3193 dpv
1010 3193 dpv
906 3089 dpv
1010 2984 dpv
1150 2984 dpv
dpu
4738 3089 dpb
4843 2984 dpv
4982 2984 dpv
5087 3089 dpv
4982 3193 dpv
4843 3193 dpv
dpu
1254 5296 dpb
1150 5400 dpv
1010 5400 dpv
906 5296 dpv
1010 5191 dpv
1150 5191 dpv
dpu
1254 5876 dpb
1150 5981 dpv
1010 5981 dpv
906 5876 dpv
1010 5772 dpv
1150 5772 dpv
dpu
0 174 2996 1579 dls
-348 0 3170 1753 dls
348 0 2822 1811 dls
3170 1811 dlt
0 233 dlv
175 0 dlv
dle
2822 1811 dlt
0 233 dlv
-174 0 dlv
dle
0 233 2996 1811 dls
2880 1927 dlt
-58 117 dlv
-58 -117 dlv
dle
0 -175 2996 4483 dls
348 0 2822 4308 dls
-348 0 3170 4250 dls
0 -232 2996 4250 dls
2822 4250 dlt
0 -232 dlv
-174 0 dlv
dle
3170 4250 dlt
0 -232 dlv
175 0 dlv
dle
2764 4018 dlt
58 116 dlv
58 -116 dlv
dle
2822 1811 3170 1869 dbs
2822 4192 3170 4250 dbs
62 0 3434 1399 dls
3451 1399 dlt
-13 14 dlv
-4 8 dlv
0 14 dlv
4 9 dlv
13 4 dlv
45 0 dlv
dle
62 0 3434 1483 dls
3451 1483 dlt
-13 14 dlv
-4 8 dlv
0 14 dlv
4 9 dlv
13 4 dlv
45 0 dlv
dle
3451 1532 dlt
-13 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
13 5 dlv
45 0 dlv
dle
3434 1634 dlt
4 -9 dlv
9 -9 dlv
13 -4 dlv
9 0 dlv
13 4 dlv
9 9 dlv
5 9 dlv
0 13 dlv
-5 9 dlv
-9 9 dlv
-13 4 dlv
-9 0 dlv
-13 -4 dlv
-9 -9 dlv
-4 -9 dlv
0 -13 dlv
dle
3447 1744 dlt
-9 -4 dlv
-4 -13 dlv
0 -14 dlv
4 -13 dlv
9 -4 dlv
9 4 dlv
4 9 dlv
5 22 dlv
4 9 dlv
9 4 dlv
4 0 dlv
9 -4 dlv
5 -13 dlv
0 -14 dlv
-5 -13 dlv
-9 -4 dlv
dle
3425 1775 dlt
-5 0 dlv
-8 5 dlv
-5 4 dlv
-4 9 dlv
0 18 dlv
4 9 dlv
5 4 dlv
8 4 dlv
9 0 dlv
9 -4 dlv
13 -9 dlv
45 -44 dlv
0 62 dlv
dle
3434 1855 dlt
62 27 dlv
-62 26 dlv
dle
93 0 2528 4152 dls
2541 4152 dlt
-9 9 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
9 9 dlv
13 4 dlv
9 0 dlv
13 -4 dlv
9 -9 dlv
5 -9 dlv
0 -13 dlv
-5 -9 dlv
-9 -9 dlv
dle
62 0 2528 4236 dls
2546 4236 dlt
-14 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
14 5 dlv
44 0 dlv
dle
2546 4285 dlt
-14 13 dlv
-4 9 dlv
0 13 dlv
4 9 dlv
14 4 dlv
44 0 dlv
dle
2528 4386 dlt
4 -8 dlv
9 -9 dlv
13 -5 dlv
9 0 dlv
13 5 dlv
9 9 dlv
5 8 dlv
0 14 dlv
-5 9 dlv
-9 8 dlv
-13 5 dlv
-9 0 dlv
-13 -5 dlv
-9 -8 dlv
-4 -9 dlv
0 -14 dlv
dle
2541 4497 dlt
-9 -4 dlv
-4 -14 dlv
0 -13 dlv
4 -13 dlv
9 -5 dlv
9 5 dlv
4 9 dlv
5 22 dlv
4 9 dlv
9 4 dlv
4 0 dlv
9 -4 dlv
5 -14 dlv
0 -13 dlv
-5 -13 dlv
-9 -5 dlv
dle
2519 4528 dlt
-4 0 dlv
-9 4 dlv
-5 5 dlv
-4 9 dlv
0 17 dlv
4 9 dlv
5 5 dlv
9 4 dlv
8 0 dlv
9 -4 dlv
14 -9 dlv
44 -44 dlv
0 62 dlv
dle
2528 4608 dlt
62 26 dlv
-62 27 dlv
dle
1161 0 1138 3089 dls
0 1045 2299 2044 dls
0 929 2299 3089 dls
2357 3089 dpb
2346 3124 dpv
2323 3147 dpv
2276 3147 dpv
2253 3124 dpv
2241 3089 dpv
2253 3054 dpv
2276 3031 dpv
2323 3031 dpv
2346 3054 dpv
dps
349 0 2299 2044 dls
349 0 2299 4018 dls
1974 0 1022 5296 dls
1858 0 1138 998 dls
0 813 2996 4483 dls
0 581 2996 998 dls
0 580 2996 2044 dls
0 465 2996 3553 dls
348 0 3345 2044 dls
348 0 3345 4018 dls
0 1045 3693 2044 dls
0 929 3693 3089 dls
3751 3089 dpb
3740 3124 dpv
3716 3147 dpv
3670 3147 dpv
3647 3124 dpv
3635 3089 dpv
3647 3054 dpv
3670 3031 dpv
3716 3031 dpv
3740 3054 dpv
dps
1162 0 3693 3089 dls
2799 3385 dlt
116 44 dlv
-116 44 dlv
dle
2915 3501 dlt
-116 0 dlv
0 39 dlv
5 16 dlv
11 11 dlv
11 6 dlv
17 5 dlv
28 0 dlv
16 -5 dlv
11 -6 dlv
11 -11 dlv
6 -16 dlv
0 -39 dlv
dle
2915 3617 dlt
-116 0 dlv
0 39 dlv
5 16 dlv
11 11 dlv
11 6 dlv
17 6 dlv
28 0 dlv
16 -6 dlv
11 -6 dlv
11 -11 dlv
6 -16 dlv
0 -39 dlv
dle
2799 2461 dlt
116 45 dlv
-116 44 dlv
dle
2815 2650 dlt
-11 -12 dlv
-5 -16 dlv
0 -22 dlv
5 -17 dlv
11 -11 dlv
11 0 dlv
12 6 dlv
5 5 dlv
6 11 dlv
11 33 dlv
5 11 dlv
6 6 dlv
11 6 dlv
16 0 dlv
11 -12 dlv
6 -16 dlv
0 -22 dlv
-6 -17 dlv
-11 -11 dlv
dle
2815 2760 dlt
-11 -11 dlv
-5 -17 dlv
0 -22 dlv
5 -16 dlv
11 -11 dlv
11 0 dlv
12 5 dlv
5 6 dlv
6 11 dlv
11 33 dlv
5 11 dlv
6 6 dlv
11 5 dlv
16 0 dlv
11 -11 dlv
6 -17 dlv
0 -22 dlv
-6 -16 dlv
-11 -11 dlv
dle
516 360 dlt
45 -117 dlv
44 117 dlv
dle
704 343 dlt
-11 11 dlv
-16 6 dlv
-22 0 dlv
-17 -6 dlv
-11 -11 dlv
0 -11 dlv
5 -11 dlv
6 -6 dlv
11 -5 dlv
33 -11 dlv
11 -6 dlv
6 -5 dlv
5 -11 dlv
0 -17 dlv
-11 -11 dlv
-16 -6 dlv
-22 0 dlv
-17 6 dlv
-11 11 dlv
dle
815 343 dlt
-11 11 dlv
-17 6 dlv
-22 0 dlv
-16 -6 dlv
-11 -11 dlv
0 -11 dlv
5 -11 dlv
6 -6 dlv
11 -5 dlv
33 -11 dlv
11 -6 dlv
5 -5 dlv
6 -11 dlv
0 -17 dlv
-11 -11 dlv
-17 -6 dlv
-22 0 dlv
-16 6 dlv
-11 11 dlv
dle
814 1040 dlt
-11 11 dlv
-17 5 dlv
-22 0 dlv
-16 -5 dlv
-12 -11 dlv
0 -11 dlv
6 -11 dlv
6 -6 dlv
11 -5 dlv
33 -11 dlv
11 -6 dlv
5 -5 dlv
6 -12 dlv
0 -16 dlv
-11 -11 dlv
-17 -6 dlv
-22 0 dlv
-16 6 dlv
-12 11 dlv
dle
78 -116 736 3147 dls
-78 -116 814 3147 dls
5150 3147 dlt
45 -55 dlv
0 -61 dlv
dle
-44 -55 5239 3147 dls
698 5337 dlt
-11 11 dlv
-17 6 dlv
-22 0 dlv
-17 -6 dlv
-11 -11 dlv
0 -11 dlv
6 -11 dlv
5 -6 dlv
11 -5 dlv
34 -11 dlv
11 -6 dlv
5 -5 dlv
6 -11 dlv
0 -17 dlv
-11 -11 dlv
-17 -5 dlv
-22 0 dlv
-17 5 dlv
-11 11 dlv
dle
736 5298 dlt
50 0 dlv
17 -5 dlv
5 -6 dlv
6 -11 dlv
0 -16 dlv
-6 -11 dlv
-5 -6 dlv
-17 -5 dlv
-50 0 dlv
0 116 dlv
50 0 dlv
17 -6 dlv
5 -5 dlv
6 -11 dlv
0 -11 dlv
-6 -12 dlv
-5 -5 dlv
-17 -6 dlv
dle
505 5934 dlt
44 -116 dlv
44 116 dlv
dle
621 5818 dlt
0 116 dlv
39 0 dlv
16 -5 dlv
11 -11 dlv
6 -11 dlv
5 -17 dlv
0 -27 dlv
-5 -17 dlv
-6 -11 dlv
-11 -11 dlv
-16 -6 dlv
-39 0 dlv
dle
737 5818 dlt
0 116 dlv
39 0 dlv
16 -5 dlv
11 -11 dlv
6 -11 dlv
5 -17 dlv
0 -27 dlv
-5 -17 dlv
-6 -11 dlv
-11 -11 dlv
-16 -6 dlv
-39 0 dlv
dle
1254 301 dpb
1150 197 dpv
1010 197 dpv
906 301 dpv
1010 406 dpv
1150 406 dpv
dps
1254 998 dpb
1150 894 dpv
1010 894 dpv
906 998 dpv
1010 1103 dpv
1150 1103 dpv
dps
2950 1533 3043 1626 dbs
2601 1997 2694 2090 dbs
2950 1997 3043 2090 dbs
3298 1997 3391 2090 dbs
1254 3089 dpb
1150 2984 dpv
1010 2984 dpv
906 3089 dpv
1010 3193 dpv
1150 3193 dpv
dps
4738 3089 dpb
4843 3193 dpv
4982 3193 dpv
5087 3089 dpv
4982 2984 dpv
4843 2984 dpv
dps
2950 4436 3043 4529 dbs
2950 3972 3043 4065 dbs
3298 3972 3391 4065 dbs
2601 3972 2694 4065 dbs
1254 5296 dpb
1150 5191 dpv
1010 5191 dpv
906 5296 dpv
1010 5400 dpv
1150 5400 dpv
dps
1254 5876 dpb
1150 5772 dpv
1010 5772 dpv
906 5876 dpv
1010 5981 dpv
1150 5981 dpv
dps
430 0 5570 5993 clwin
gfs
%%Trailer
%%EOF
